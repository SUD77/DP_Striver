



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

**********************************
Solution 1: Recursion (gives TLE)
**********************************

**********************************************************************************************************

Note : Implemented recursion based on bottom up approach.  

***********************************************************************************************************

class Solution {
    public int uniquePaths(int m, int n) {
     
        return solUtil(m,n,0,0);
    }
    
    public int solUtil(int m,int n,int i,int j){
        
        if(i>=m || j>=n) return 0;
        if(i==m-1 && j==n-1) return 1;
        
        int count=0;
        
        count+=solUtil(m,n,i+1,j);
        count+=solUtil(m,n,i,j+1);
        
        
        return count;  
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

************************
Solution 2: Memoization
*************************

