

Leetcode link : https://leetcode.com/problems/triangle/


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 1 : Recursion (Will give TLE)

TC = O(2^ (No. of elements in matrix)) | SC= O(N) -> stack space will go upto length of rows in matrix i.e N

***********************************************************************************************************************************************






//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 2 : Memoization

 TC = O(N x N) = No. of states | SC= O(N)-> stack space + O(N x N)-> dp[][] space

***********************************************************************************************************************************************






//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 3 : Tabulation

TC = O(N x N) to compute these states | SC= O(N x N) dp[][] space, no stack space

***********************************************************************************************************************************************







//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 4 : Space Optimization

 TC = O(N x N)  | SC = O(N)-> space of next[] of N=columns size

***********************************************************************************************************************************************




