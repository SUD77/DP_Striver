Leetcode link : https://leetcode.com/problems/longest-palindromic-subsequence/

Note : 
1. Question is similar to LCS. Entirely. 




//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 1 : Recursion 

class Solution {
    public int longestPalindromeSubseq(String s) {
        
        
        //Start  : Creating reverse of s
        StringBuffer tempS=new StringBuffer(s);
        tempS.reverse();
        String s2=tempS.toString();
        //End 
        
        
        System.out.println(s2);
        
        int len1=s.length();
        int len2=s2.length();
               
        return solUtil(s,s2,len1-1,len2-1);

    }
    
    public int solUtil(String s1,String s2,int idx1,int idx2){
        
        if(idx1<0 || idx2<0) return 0;
        
        if(s1.charAt(idx1)==s2.charAt(idx2)){
            return 1+solUtil(s1,s2,idx1-1,idx2-1);
        }
        
        
        return Math.max(solUtil(s1,s2,idx1-1,idx2),solUtil(s1,s2,idx1,idx2-1));
        
    }
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 2 : Memoization 




//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 3 : Tabulation 





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution 4 : Space Optimization 

